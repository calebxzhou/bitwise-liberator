package dao.impl;

import dao.*;
import model.*;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.sql.Timestamp;

public class ${entity.capEn()}DAOImpl implements ${entity.capEn()}DAO{
    private boolean flag = false;
    private Connection conn = DBConnection.getConnection();
    private PreparedStatement pstmt = null;
    private ResultSet rs = null;

    public ${entity.getVoName()} doQueryById(String id) {

${entity.getVoName()} ${entity.getVoNameUncap()}=new ${entity.getVoName()}();
        try{
            String sql = "select * from ${entity.getVoName()} where id=?";
            pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, id);
            rs = pstmt.executeQuery();
            if(rs.next()){
                #foreach( $field in $vo.Fields )
                    ${entity.getVoNameUncap()}.set$field.capEn()(rs.${field.getResultSetGetMethod()}("$field.NameEn"));
                #end
            }else{
                ${entity.getVoNameUncap()} = null;
            }

        } catch(Exception e){e.printStackTrace();}finally {try{
            pstmt.close();
            rs.close();
            conn.close();
}catch(Exception e){e.printStackTrace();}
        }
        return ${entity.getVoNameUncap()};
    }

#foreach($field in ${vo.getFieldsWithoutId()})
    public List<${entity.getVoName()}> doQueryBy${field.capEn()}(${field.getJavaType()} ${field.NameEn}) {
        List<${entity.getVoName()}> all${entity.getVoName()} = new ArrayList<>();
        try {
            String sql = "select * from ${entity.getVoName()} where ${field.NameEn}=?";
            pstmt = conn.prepareStatement(sql);
            pstmt.${field.getPstmtMethod()}(1,${field.NameEn});
            rs = pstmt.executeQuery();
            while (rs.next()) {
                ${entity.getVoName()} ${entity.getVoNameUncap()} = new ${entity.getVoName()}();
                #foreach( $field in $vo.Fields )
                ${entity.getVoNameUncap()}.set${field.capEn()}(rs.${field.getResultSetGetMethod()}("$field.NameEn"));
                #end
                all${entity.getVoName()}.add(${entity.getVoNameUncap()});
            }
        } catch(Exception e){e.printStackTrace();}finally {try{
				pstmt.close();
				rs.close();
	            conn.close();
}catch(Exception e){e.printStackTrace();}
		}

        return all${entity.getVoName()};


    }
#end

    public List<${entity.getVoName()}> doQueryAll() {

        List<${entity.getVoName()}> all${entity.getVoName()} = new ArrayList<>();
        try {
            String sql = "select * from ${entity.getVoName()}";
            pstmt = conn.prepareStatement(sql);
            rs = pstmt.executeQuery();
            while (rs.next()) {
                ${entity.getVoName()} ${entity.getVoNameUncap()} = new ${entity.getVoName()}();
                #foreach( $field in $vo.Fields )
                    ${entity.getVoNameUncap()}.set${field.capEn()}(rs.${field.getResultSetGetMethod()}("$field.NameEn"));
                #end
                all${entity.getVoName()}.add(${entity.getVoNameUncap()});
            }

        }  catch(Exception e){e.printStackTrace();}finally {try{
				pstmt.close();
				rs.close();
	            conn.close();
}catch(Exception e){e.printStackTrace();}
        }
        return all${entity.getVoName()} ;

    }

    public boolean doUpdate(${entity.capEn()} ${entity.NameEn}) {
        try{
            String sql = "update ${entity.capEn()} set ${entity.getUpdateStatement()} where id=?";
            pstmt = conn.prepareStatement(sql);
            #set($maxCount=0)
        #foreach( $field in $entity.Fields )
            pstmt.${field.getPstmtMethod()}($foreach.count,${entity.NameEn}.get${field.capEn()}());
            #set($maxCount=$foreach.count)
        #end
            pstmt.setString($maxCount,${entity.NameEn}.getId());
            int count = pstmt.executeUpdate();
            if(count>0){
                flag=true;
            }

        }catch(Exception e){e.printStackTrace();}finally {try{
                        pstmt.close();
                        conn.close();
}catch(Exception e){e.printStackTrace();}
        }
        return flag;
    }
    public boolean doCreate(${entity.capEn()} ${entity.NameEn}) {
        try{
            String sql = "insert into ${entity.capEn()} values (${entity.getInsertStatement()})";
            pstmt = conn.prepareStatement(sql);
            #foreach( $field in $entity.Fields )
            pstmt.${field.getPstmtMethod()}($foreach.count,${entity.NameEn}.get${field.capEn()}());
            #end
            int count = pstmt.executeUpdate();
            if(count>0){
                flag=true;
            }
        }  catch(Exception e){e.printStackTrace();}finally {try{
				pstmt.close();
	            conn.close();
}catch(Exception e){e.printStackTrace();}
        }
        return flag;

    }
    public boolean doDelete(String id) {
        try{
        pstmt = conn.prepareStatement("delete from ${entity.capEn()} where id=?");
        pstmt.setString(1, id);
        int count = pstmt.executeUpdate();
        if(count>0){
        flag=true;
        }
        }  catch(Exception e){e.printStackTrace();}finally {try{
        pstmt.close();
        conn.close();
}catch(Exception e){e.printStackTrace();}
        }
        return flag;



    }



}