package servlet;

import java.io.IOException;
import java.sql.Timestamp;
import java.sql.Date;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import dao.*;
import model.*;

//负责新增${entity.NameCn}信息的控制器类
@WebServlet("/${entity.capEn()}AddServlet")
public class ${entity.capEn()}AddServlet extends HttpServlet {

    //跳转到${entity.NameCn}的添加界面
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException,IOException {
        #if($entity.hasForeignKey())
            //载入添加界面的下拉框
            #foreach($fkfield in $entity.getForeignKeyFieldList())
                //下拉框信息
                req.setAttribute("${fkfield.getForeignKey().Table}_list",DAOFactory.get${fkfield.getForeignKey().capEn()}DAOInstance().doQueryAll());
            #end
        #end
        //跳转
        req.getRequestDispatcher("${entity.NameEn}_add.jsp").forward(req,resp);

    }

    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException,IOException {
        //创建一个新的${entity.NameCn}对象
        ${entity.capEn()} ${entity.NameEn} = new ${entity.capEn()}();
        #foreach( $field in $entity.Fields )
        //从表单中读取${field.NameCn}数据
        //给${entity.NameCn}的${field.NameCn}赋值
        ${entity.NameEn}.set${field.capEn()}(${field.getJavaType()}.valueOf(req.getParameter("${field.NameEn}")));
        #end
        //存入数据库
        if(DAOFactory.get${entity.capEn()}DAOInstance().doCreate(${entity.NameEn})){

            //跳回列表
            req.getRequestDispatcher("${entity.capEn()}QueryAllServlet").forward(req,resp);
        }
    }
}