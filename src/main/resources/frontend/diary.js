
class System {
    constructor(name, desc, examples) {
        this.name = name;
        this.desc = desc;
        this.examples = examples;
    }
}
class Tech {
    constructor(name, desc, bugs) {
        this.name = name;
        this.desc = desc;
        this.bugs = bugs;
    }
}

class Lang {
    constructor(name, techs) {
        this.name = name;
        this.techs = techs;
    }
}


const thinks = [
    [
        "这次%company%实习让我学到了很多%progLang%开发的知识和技能",
        "这是我第一次接触到真正的%progLang%项目",
        "我很高兴能在%company%担任%progLang%实习工程师",
        "我觉得%company%这次实习对我的专业成长和职业规划有很大的帮助",
        "我在%company%体会到了团队协作的重要性和乐趣",
        "在%company%担任%progLang%实习工程师是我梦寐以求的职业",
        "我在%company%有机会参与到真实的%progLang%项目中",
        "我觉得这次%company%的实习是我人生中的一个重要的转折点",
        "我很感激能在%company%实习",
        "我很享受在%company%实习的过程",
        "我很幸运能在%company%实习",
        "我很开心能在%company%实习",
        "我很自豪能在%company%实习",
        "我在%company%遇到了很多优秀的同事和导师",
        "%company%给了我一个很好的学习平台",
    ],
    [
        "这是我第一次接触%progLang%",
        "我对%progLang%语言和相关技术有很大的兴趣和热情",
        "我认为%progLang%是一个非常强大灵活和易于维护的语言",
        "我希望能够继续深入学习%progLang%",
        "我在这里遇到了很多有经验和有才华的%progLang%工程师",
        "我觉得%progLang%是一门非常有趣和有用的语言",
        "我喜欢%progLang%的语法和特性",
        "我也喜欢%progLang%的生态系统",
        "我觉得%progLang%是一个值得深入学习和掌握的语言",
        "我一直想成为一名优秀的%progLang%工程师",
        "我有机会参与到各种各样的%progLang%项目中",
        "这是我对%progLang%的一种热爱和追求",
        "我对%progLang%有着深厚的兴趣和基础",
        "我也很渴望能够用%progLang%开发出优秀的软件",
        "我有机会接触到最新的%progLang%技术和框架",
    ],
    [
        "我面对了很多挑战和困难，但我没有放弃，而是努力克服寻求解决方案",
        "我遇到了很多挑战和困难，但我没有退缩，而是努力解决寻找方法",
        "我经历了很多挑战和困难，但我没有气馁，而是努力应对寻求帮助",
        "我碰到了很多挑战和困难，但我没有逃避，而是努力改善寻找机会",
        "我承受了很多挑战和困难，但我没有妥协，而是努力战胜寻求突破",
        "我遭遇了很多挑战和困难，但我没有失望，而是努力学习寻求进步",
        "我面临了很多挑战和困难，但我没有抱怨，而是努力调整寻求平衡",
        "我遭受了很多挑战和困难，但我没有绝望，而是努力奋斗寻求希望",
        "我遇见了很多挑战和困难，但我没有屈服，而是努力创新寻求变化",
        "我经受了很多挑战和困难，但我没有沮丧，而是努力成长寻求提升",
        "我不仅要完成自己的任务，还要配合团队的协作，保证项目的质量和进度",
        "我不断地学习新知识新技能新方法，提高自己的工作效率和能力",
        "我有机会参与各种项目的开发，学习了%progLang%的框架、数据库、网络、安全等方面的知识",
        "我在%company%收获了宝贵的经验，掌握了很多%progLang%的基础和高级技术",
        "我不仅要完成自己的任务，还要配合团队的协作，保证项目的质量和进度。我不断地学习新知识新技能新方法，提高自己的工作效率和能力",
        "除了做好自己的分内事，我还要和团队同事通力合作，确保项目的品质和时效。我持续地学习新的知识技能方法，提升自己的工作效率和能力",
        "我不单单要做完自己的工作，还要与团队成员密切配合，保障项目的质量和进度。我持续地掌握新的知识技能方法，提升自己的工作效率和能力",
        "我不只是要完成自己的职责，还要和团队伙伴紧密协作，确保项目的品质和时效。我不断地获取新的知识技能方法，提高自己的工作效率和能力",
        "除了承担自己的工作，我还要与团队同事协调合作，保证项目的质量和进度。我持续地探索新的知识技能方法，提高自己的工作效率和能力",
        "我不仅仅要履行自己的职责，还要和团队成员有效协作，保障项目的品质和时效。我不断地吸收新的知识技能方法，提升自己的工作效率和能力",
        "除了执行自己的任务，我还要与团队同事顺畅合作，确保项目的质量和进度。我持续地积累新的知识技能方法，提升自己的工作效率和能力",
        "我不只是要做好自己的分内事，还要和团队伙伴密切配合，保证项目的品质和时效。我不断地更新新的知识技能方法，提高自己的工作效率和能力",
        "除了完成自己的工作，我还要与团队同事高效合作，保障项目的质量和进度。我持续地研究新的知识技能方法，提高自己的工作效率和能力",
    ],
    [
        "我需要从头开始学习%progLang%的基本语法和数据结构",
        "我需要从零基础开始掌握%progLang%的基础语法和数据结构",
        "我需要从基础知识开始入门%progLang%的基本语法和数据结构",
        "我需要从最初的概念开始了解%progLang%的基本语法和数据结构",
        "我需要从最基本的要素开始熟悉%progLang%的基本语法和数据结构",
        "我需要从最简单的部分开始学习%progLang%的基本语法和数据结构",
        "我需要从最核心的内容开始探索%progLang%的基本语法和数据结构",
        "我需要从最重要的原理开始认识%progLang%的基本语法和数据结构",
        "我需要从最基础的层次开始理解%progLang%的基本语法和数据结构",
        "我需要从最初的步骤开始学习%progLang%的基本语法和数据结构",
        "我了解了%tech%的使用方法和优势",
        "我了解了%tech%的基本操作和优化技巧",
        "作为一名实习%progLang%工程师,让我对自己有了更高的要求和期待",
    ],
    [
        "我掌握了%progLang%的变量、运算符、流程控制、数组、字符串等基础知识",
        "我觉得%company%这次实习是我对工作的一种责任和担当，这是我对未来的一种憧憬和展望",
        "通过在%company%的实习，我学习到了很多%progLang%的知识，提高了我的编程能力和解决问题的能力",
        "在%company%实习期间，我掌握了很多%progLang%的技术和方法，提升了我的编程水平和问题解决能力。",
        "我在%company%的实习让我深入了解了%progLang%的应用和发展，增强了我的编程技能和问题分析能力。",
        "实习于%company%使我学到了很多%progLang%的知识和经验，改善了我的编程效率和问题处理能力。",

    ],
    [
        "我很期待能在%company%继续任职%progLang%工程师",
        "我看到了很多希望和动力,让我对未来有了更多的信心和计划",
        "我认为这些知识对于我成为一名合格的%progLang%工程师是非常重要的，也为我未来的职业发展打下了坚实的基础。",
        "我很享受在%company%实习的过程，感受到了%progLang%的魅力和挑战",
        "我很感激%company%给我提供了这样一个学习和成长的机会，让我能够接触到最新的%progLang%技术和项目",
        "我很自豪能够成为%company%的一员，与优秀的同事们一起使用%progLang%创造价值和影响",
        "我在%company%实习期间，收获了很多%progLang%的知识和技巧，提高了我的编程能力和解决问题的能力。",
        "我很幸运能够在%company%实习，体验到了%progLang%的实际应用和前沿发展",
        "我认为在%company%实习是我人生中最宝贵的经历之一，让我对%progLang%有了更深刻的理解和热爱",
        "我很感谢%company%对我的信任和支持，让我有机会使用%progLang%参与到有意义和有挑战性的项目中",

    ]
]
const todays = "今天，今日，本日，当天".split("，")
const impls = `
    我要为我们的新应用程序编写一个功能的代码，该应用程序使用 %tech%。
我需要开发一个功能模块，用 %tech% 构建我们的新应用程序。
我要用 %tech% 实现一个功能，为我们的新应用程序添加特性。
我需要用 %tech% 完成一个功能的开发，该功能是我们新应用程序的一部分。
我要为我们的新应用程序创建一个功能的逻辑，使用 %tech% 作为技术栈。
我需要编程实现一个功能，该功能属于我们的新应用程序，使用 %tech% 作为开发工具。
我要用 %tech% 编写一个功能的代码，该功能是我们新应用程序的核心组件。
我需要开发一个功能，使用 %tech% 搭建我们的新应用程序的架构。
我要使用 %tech% 开发一个功能，该功能是我们新应用程序的亮点。
我需要用 %tech% 设计一个功能，该功能是我们新应用程序的创新点。
我要为我们的新应用程序开发一个功能，使用 %tech% 作为后端技术。
我需要编写一个功能，使用 %tech% 为我们的新应用程序提供服务。
我要用 %tech% 完成一个功能，该功能是我们新应用程序的基础功能。
我需要实现一个功能，使用 %tech% 优化我们的新应用程序的性能。
我要使用 %tech% 编程，为我们的新应用程序增加一个功能。
我需要构建一个功能，使用 %tech% 支持我们的新应用程序的运行。
我要用 %tech% 开发一个功能，该功能是我们新应用程序的扩展功能。
我需要制作一个功能，使用 %tech% 简化我们的新应用程序的操作。
我要使用 %tech% 制作一个功能，该功能是我们新应用程序的用户界面。
我需要开发一个功能，使用 %tech% 实现我们的新应用程序的业务逻辑。
我要为我们的新应用程序编码一个功能，该应用程序使用 %tech% 作为开发平台。
我需要创建一个功能模块，使用 %tech% 配合我们的新应用程序。
我要用 %tech% 生成一个功能，该功能是我们新应用程序的数据处理部分。
我需要开发一个功能，使用 %tech% 集成我们的新应用程序和其他系统。
我要使用 %tech% 实现一个功能，该功能是我们新应用程序的安全保障部分。
我被分配了一个繁琐的，过时的%progLang%项目，它导致了我们的生产环境崩溃。我不得不花费很长时间才能定位并修复错误，最后我松了一口气。
我面临着一个棘手的，陈旧的%progLang%项目，它在我们的生产环境中造成了严重的故障，我努力地寻找并解决问题，最终我感到满意。
我负责了一个复杂的，落后的%progLang%项目，它在我们的生产环境中引起了灾难性的问题，我费了好大劲才能找出并消除问题，最后我很开心。
我处理了一个难搞的，过期的%progLang%项目，它在我们的生产环境中导致了致命的错误，我花了很多时间才能发现并解决问题，最后我很欣慰。
我接手了一个困难的，老式的%progLang%项目，它在我们的生产环境中造成了严重的损害，我辛苦地寻找并修复问题，最后我很快乐。
我继承了一个繁重的，陈腐的%progLang%项目，它在我们的生产环境中引发了灾难性的漏洞，我花了很多精力才能定位并消除问题，最后我很幸福。
我承担了一个复杂的，过时的%progLang%项目，它在我们的生产环境中导致了致命的故障，我费尽心思地寻找并解决问题，最后我很舒心。
我接受了一个棘手的，落后的%progLang%项目，它在我们的生产环境中引起了严重的问题，我花了很多时间才能发现并修复错误，最后我很高兴。
我担任了一个难搞的，老旧的%progLang%项目，它在我们的生产环境中造成了灾难性的错误，我努力地定位并消除问题，最后我很满意。
我负责了一个困难的，过期的%progLang%项目，它在我们的生产环境中导致了严重的损害，我费尽心力地寻找并修复漏洞，最后我很开心。
    `.split("。")


const commercialSystems = [
    new System(
        "物业管理系统",
        "这种系统用于管理商业物业，如办公空间、零售店、酒店、购物中心、学生公寓、医疗中心等。这种系统可以提供财务和行政方面的工具，如租金收缴、费用分摊、合同管理、预算编制、报表生成等。",
        ["AppFolio Property Manager","Propertyware","MRI Commercial Suite","Property Boulevard","Total Management","Yardi Commercial Suite"]
    ),
    new System(
        "资产管理系统",
        "这种系统用于管理企业或组织的资产，如设备、车辆、库存、知识产权等。这种系统可以提供资产的跟踪、维护、评估、优化等功能，以提高资产的使用效率和价值。",
        ["IBM Maximo Asset Management","Oracle Enterprise Asset Management","SAP Asset Manager","Infor EAM","Asset Panda"]
    ),
    new System(
        "交易管理系统",
        "这种系统用于管理企业或组织的交易活动，如销售、采购、合作、投资等。这种系统可以提供交易的记录、分析、审批、执行等功能，以提高交易的效率和收益。",
        ["Salesforce CRM","Zoho CRM","HubSpot CRM","QuickBooks Commerce","Odoo ERP"]

    ),
    new System(
        "内容管理系统",
        "这种系统用于管理企业或组织的数字内容，如网站、博客、社交媒体、电子邮件等。这种系统可以提供内容的创建、编辑、组织、发布等功能，以提高内容的质量和效果。",
        ["WordPress","Drupal","Joomla","Shopify","Oracle Content Management"]
    ),
    new System(
        "项目管理系统",
        "这种系统用于管理企业或组织的项目活动，如计划、执行、监控、收尾等。这种系统可以提供项目的任务分配、进度跟踪、资源管理、风险控制、报告生成等功能，以提高项目的效率和成功率。",
        ["ProofHub","Asana","Trello","Wrike","Microsoft Project"]
    ),
    new System(
        "客户关系管理系统",
        "这种系统用于管理企业或组织与客户之间的关系，如销售、服务、营销等。这种系统可以提供客户的信息收集、分析、沟通、满意度测量等功能，以提高客户的忠诚度和收入。",
        ["Salesforce CRM","Zoho CRM","HubSpot CRM","QuickBooks Commerce","Odoo ERP"]
    ),new System(
        "数据库管理系统",
        "这种系统用于管理企业或组织的数据库，如存储、查询、更新、分析等。这种系统可以提供数据库的设计、建立、维护、优化等功能，以提高数据库的性能和安全性。",
        ["Oracle","MySQL","Microsoft SQL Server","MongoDB","PostgreSQL"]
    ),
    new System(
        "内容管理系统",
        "这种系统用于管理企业或组织的数字内容，如网站、博客、社交媒体、电子邮件等。这种系统可以提供内容的创建、编辑、组织、发布等功能，以提高内容的质量和效果。",
        ["WordPress","Drupal","Joomla","Shopify","Oracle Content Management"]
    ),
    new System(
        "项目管理系统",
        "这种系统用于管理企业或组织的项目活动，如计划、执行、监控、收尾等。这种系统可以提供项目的任务分配、进度跟踪、资源管理、风险控制、报告生成等功能，以提高项目的效率和成功率。",
        ["ProofHub","Asana","Trello","Wrike","Microsoft Project"]
    ),
    new System(
        "客户关系管理系统",
        "这种系统用于管理企业或组织与客户之间的关系，如销售、服务、营销等。这种系统可以提供客户的信息收集、分析、沟通、满意度测量等功能，以提高客户的忠诚度和收入。",
        ["Salesforce CRM","Zoho CRM","HubSpot CRM","QuickBooks Commerce","Odoo ERP"]
    ),
    new System(
        "物流管理系统",
        "这种系统用于管理企业或组织的物流活动，如运输、仓储、配送等。这种系统可以提供物流的规划、调度、跟踪、优化等功能，以提高物流的效率和成本节约。",
        ["SAP Logistics","Oracle Logistics Cloud","Infor Supply Chain Management","JDA Software","CMS Logistics"]
    ),
    new System(
        "人力资源管理系统",
        "这种系统用于管理企业或组织的人力资源活动，如招聘、培训、考核、薪酬等。这种系统可以提供人力资源的规划、分配、评价、激励等功能，以提高人力资源的满意度和绩效。",
        ["Workday HCM","BambooHR","Zenefits","ADP Workforce Now","Paycom"]
    ),
    new System(
        "财务管理系统",
        "这种系统用于管理企业或组织的财务活动，如会计、预算、报税、审计等。这种系统可以提供财务的记录、分析、报告、合规等功能，以提高财务的准确性和透明度。",
        ["QuickBooks Online","Xero","FreshBooks","Wave Accounting","Sage 50cloud"]
    ),
    new System(
        "教育管理系统",
        "这种系统用于管理企业或组织的教育活动，如培训、课程、考试等。这种系统可以提供教育的设计、实施、评估、反馈等功能，以提高教育的质量和效果。",
        ["Moodle","Canvas LMS","Blackboard Learn","Google Classroom","Coursera for Business"]
    ),
    new System(
        "健康管理系统",
        "这种系统用于管理企业或组织的健康活动，如医疗服务、健康记录、预约挂号等。这种系统可以提供健康的监测、诊断、治疗、预防等功能，以提高健康的水平和安全性。",
        ["Epic Systems","Cerner Millennium","Meditech Expanse","Allscripts Sunrise EHR","athenahealth EHR"]
    ),
    new System(
        "旅游管理系统",
        "这种系统用于管理企业或组织的旅游活动，如预订机票酒店车辆门票等。这种系统可以提供旅游的规划、搜索、比较、支付等功能，以提高旅游的便利性和享受性。",
        ["Booking.com","Expedia.com","TripAdvisor.com","Trivago.com","Kayak.com"]
    ),new System(
        "环境管理系统",
        "这种系统用于管理企业或组织的环境活动，如减少污染、节约能源、提高回收利用等。这种系统可以提供环境的监测、评估、改进等功能，以提高环境的质量和保护。",
        ["SYS-14000","EMAS","Green Globe","Eco-Management and Audit Scheme"]
    ),
    new System(
        "质量管理系统",
        "这种系统用于管理企业或组织的质量活动，如保证产品或服务的质量、满足客户的需求、遵守法律法规等。这种系统可以提供质量的规划、控制、保证、改进等功能，以提高质量的水平和竞争力。",
        ["SYS-9000","Six Sigma","Total Quality Management","Lean Management"]
    ),
    new System(
        "风险管理系统",
        "这种系统用于管理企业或组织的风险活动，如识别风险、分析风险、评估风险、应对风险等。这种系统可以提供风险的预防、减轻、转移、接受等功能，以提高风险的控制和应变。",
        ["SYS-31000","COSO ERM Framework","PMI Risk Management Standard","RIMS Risk Maturity Model"]
    ),
    new System(
        "信息安全管理系统",
        "这种系统用于管理企业或组织的信息安全活动，如保护信息的机密性、完整性、可用性等。这种系统可以提供信息安全的策略、政策、程序、技术等功能，以提高信息安全的水平和防御。",
        ["ISO/IEC 27000","NIST Cybersecurity Framework","COBIT 5 for Information Security","SANS 20 Critical Security Controls"]
    ),
    new System(
        "IT服务质量管理系统",
        "这种系统用于管理企业或组织的IT服务质量活动，如提供可靠、高效、满意的IT服务等。这种系统可以提供IT服务质量的设计、交付、运行、改进等功能，以提高IT服务质量的水平和价值。",
        ["ISO/IEC 20000","ITIL","FitSM","COBIT 5 for IT Governance"]
    ),
    new System(
        "业务连续性管理系统",
        "这种系统用于管理企业或组织的业务连续性活动，如应对突发事件、恢复正常运营、减少损失等。这种系统可以提供业务连续性的分析、规划、实施、测试等功能，以提高业务连续性的水平和韧性。",
        ["SYS-22301","BS 25999","NFPA 1600","DRI International Professional Practices"]
    ),
    new System(
        "资产管理系统",
        "这种系统用于管理企业或组织的资产活动，如设备、车辆、库存、知识产权等。这种系统可以提供资产的跟踪、维护、评估、优化等功能，以提高资产的使用效率和价值。",
        ["SYS-55000","PAS 55","GFMAM Asset Management Landscape","IAM Anatomy of Asset Management"]
    ),
    new System(
        "创新管理系统",
        "这种系统用于管理企业或组织的创新活动，如发现机会、开发创意、实现创新等。这种系统可以提供创新的战略、文化、过程、方法等功能，以提高创新的水平和竞争力。",
        ["SYS-56002","CEN/TS 16555-1","Oslo Manual","Innovation Management Maturity Model"]
    ),
    new System(
        "项目管理系统",
        "这种系统用于管理企业或组织的项目活动，如计划、执行、监控、收尾等。这种系统可以提供项目的任务分配、进度跟踪、资源管理、风险控制、报告生成等功能，以提高项目的效率和成功率。",
        ["PRINCE2","PMBOK Guide","Agile Project Management","Scrum Framework"]
    ),
]

const langs = [
    new Lang(
        "Java",
        [
             new Tech(
                "Hadoop",
                [
                    "一个开源的基于Java的软件框架",
                    "用于在多个计算机的网络上存储和处理大量的数据",
                    "使用了分布式存储和并行处理的技术，实现了MapReduce编程模型",
                    "最初是为了利用廉价的硬件构建计算机集群而设计的，但后来也适用于更高端的硬件",
                    "所有模块都是基于一个基本的假设，即硬件故障是常见的现象，应该由框架自动处理"
                ],
                [
                    ["配置异常", "当Hadoop无法正确读取或解析配置文件时抛出"],
                    ["文件系统异常", "当Hadoop无法正确操作或访问HDFS时抛出"],
                    ["资源管理异常", "当Hadoop无法正确分配或释放YARN资源时抛出"],
                    ["MapReduce异常", "当Hadoop无法正确执行或监控MapReduce任务时抛出"]
                ]
            ),
             new Tech(
                "Spring Boot",
                [
                    "是一个基于Spring框架的快速开发和部署Java应用程序的技术，可以简化配置，提供各种依赖和插件，支持微服务和云原生。",
                    "可以根据你的类路径和已配置的bean，自动配置Spring和第三方库，让你可以专注于业务功能而不是基础设施。",
                    "不会生成代码或修改你的文件，而是在你启动应用程序时，动态地创建和设置bean，并将它们应用到你的应用程序上下文。",
                    "的官方文档提供了很多详细和实用的信息和指南，可以帮助你了解Spring Boot的基本概念和功能，并且遵循最佳实践。",
                    "提供了很多工具和插件来辅助开发和调试，比如Spring Initializr, Spring Boot DevTools, Spring Boot Actuator等，可以帮助你快速创建和运行应用程序，并且监控和管理应用程序的状态。",
                    "有一个庞大和活跃的社区，提供了很多资源和支持，比如GitHub Issues, Stack Overflow, Gitter等，可以帮助你解决遇到的问题，并且学习其他开发者的经验和建议。",
                ],
                [
                    [
                        "配置错误",
                        "提供了很多自动配置的功能，但是如果配置不正确或不完整，可能会导致应用程序无法启动或运行异常。比如，如果没有指定数据源的相关属性，就无法使用JDBC或JPA等数据访问技术。"
                    ],
                    [
                        "依赖冲突",
                        "提供了很多依赖管理的功能，但是如果引入了不兼容或重复的依赖，可能会导致类加载或运行时错误。比如，如果引入了不同版本的Spring Boot Starter或其他第三方库，就可能出现版本冲突或方法缺失等问题。"
                    ],
                    [
                        "注解错误",
                        "提供了很多注解来简化开发和配置，但是如果注解使用不正确或不完整，可能会导致功能失效或逻辑错误。比如，如果没有在类上添加@ComponentScan注解，就无法扫描到其他包下的组件。"
                    ],
                    [
                        "性能问题",
                        "提供了很多高效和灵活的功能，但是如果没有合理地使用和优化，可能会导致性能下降或资源浪费。比如，如果没有合理地配置线程池或缓存等组件，就可能出现线程阻塞或内存溢出等问题。"
                    ],
                    [
                        "安全问题",
                        "提供了很多安全和认证的功能，但是如果没有正确地配置和使用，可能会导致安全漏洞或权限泄露。比如，如果没有在Web层添加@PreAuthorize或@Secured等注解，就无法对用户的访问进行控制。"
                    ],
                    [
                        "注解错误",
                        "提供了很多注解来简化开发和配置，但是如果注解使用不正确或不完整，可能会导致功能失效或逻辑错误。比如，如果没有在类上添加@ComponentScan注解，就无法扫描到其他包下的组件。"
                    ],
                ]
            ),
            new Tech(
                "Elasticsearch",
                [
                    "自由、开放的分布式搜索引擎，可以提供高效、可扩展、实时的全文检索和分析功能。",
                    "基于 Lucene 构建，使用 RESTful API 进行交互，支持多种数据类型和多种语言。",
                ],
                [
                    [
                        "内存不足",
                        "要足够的内存来缓存索引数据和执行搜索操作。如果内存不足，可能会导致性能下降、垃圾回收频繁或进程被系统杀死。为了避免这些问题，需要合理地设置堆内存大小，并且监控内存使用情况。"
                    ],
                    [
                        "分片不平衡",
                        "通过将索引划分为多个分片来实现水平扩展和容错。如果分片分配不均匀，可能会导致某些节点负载过高或资源浪费。为了避免这些问题，需要合理地设置分片数量，并且调整集群路由策略。"
                    ],
                    [
                        "映射冲突",
                        "通过映射来定义字段类型和属性。如果同一个索引中有相同名称但不同类型的字段出现在不同文档中，就会导致映射冲突。这会影响索引创建、文档写入和查询结果。为了避免这些问题，需要提前规划好映射结构，并且遵循一致的命名规范。"
                    ],
                    [
                        "版本冲突",
                        "通过乐观锁机制来保证文档更新的一致性。如果同时对同一个文档进行更新操作，并且使用了旧版本号或者忽略了版本号，则会导致版本冲突。这会影响文档内容的正确性和一致性。为了避免这些问题，在更新文档时需要检查版本号，并且处理好冲突情况。"
                    ],
                    [
                        "集群不稳定",
                        "集群需要保持足够数量的节点来维持健康状态和高可用性。如果节点频繁加入或离开集群，则会导致集群状态波动、分片迁移或重新平衡等操作。这会影响集群性能和稳定性。为了避免这些问题，在部署集群时需要考虑节点规模、网络环境、硬件配置等因素，并且监控集群状态变化。"
                    ],
                ]
            ),
            new Tech(
                "MyBatis",
                [
                    "这是一个支持自定义SQL，存储过程和高级映射的持久层框架，它可以消除几乎所有的JDBC代码和参数的手工设置以及结果集的检索",
                    "可以使用简单的XML或注解来配置和映射基本类型，Map接口和Java POJO（Plain Old Java Objects）到数据库记录",
                    "可以与Spring Boot集成，以提供更好的开发体验和效率",
                ],
                [
                    [
                        "配置错误",
                        "这是指在XML或注解中配置了错误的参数，属性，映射或别名等，导致MyBatis无法正确解析或执行SQL语句"
                    ],
                    [
                        "SQL错误",
                        "这是指在自定义SQL语句中使用了错误的语法，逻辑，函数或操作符等，导致数据库无法正确执行SQL语句"
                    ],
                    [
                        "映射错误",
                        "这是指在将结果集映射到Java对象时发生了类型不匹配，空指针，越界或反射等错误"
                    ],
                ]
            ),
            new Tech(
                "Hibernate",
                [
                    "这是一个提供对象关系映射（ORM）和查询服务的框架，它可以将面向对象的模型和关系型数据库的模型进行映射，从而简化数据访问和操作",
                    "支持多种数据库方言，缓存机制，事务管理，注解和XML配置等特性，它是Java持久层框架中最流行的一个",
                    "可以与Spring Boot集成，以提供更好的开发体验和效率",
                ],
                [
                    [
                        "配置错误",
                        "这是指在XML或注解中配置了错误的参数，属性，映射或别名等，导致Hibernate无法正确初始化或执行SQL语句"
                    ],
                    [
                        "SQL错误",
                        "这是指在自动生成或自定义SQL语句中使用了错误的语法，逻辑，函数或操作符等，导致数据库无法正确执行SQL语句"
                    ],
                    [
                        "映射错误",
                        "这是指在将结果集映射到Java对象时发生了类型不匹配，空指针，越界或反射等错误"
                    ],
                ]
            ),
            new Tech(
                "Netty",
                [
                    "一个异步事件驱动的网络应用框架",
                    "用于快速开发可维护的高性能协议服务器和客户端",
                    "基于NIO或NIO.2，实现了网络和业务逻辑组件的分离和松耦合",
                    "可以实现广为人知的协议，如HTTP，也可以实现自定义的协议",
                    "使用事件驱动的应用范式，数据处理的流程是一系列事件通过处理器的链条",
                    "提供了编码器和解码器来进行数据的序列化和反序列化"
                ],
                [
                    ["连接超时异常", "当连接建立或读写操作超过指定时间时抛出"],
                    ["解码异常", "当解码器无法正确解析入站数据时抛出"],
                    ["编码异常", "当编码器无法正确格式化出站数据时抛出"],
                    ["不支持的消息类型异常", "当处理器无法处理某种消息类型时抛出"]
                ]
            ),
            new Tech(
                "Spring",
                [
                    "一个开源的企业级应用框架",
                    "使用依赖注入和面向切面编程的概念，实现了模块之间的松耦合",
                    "提供了很多功能，包括安全性和配置，易于学习",
                    "是最流行的web框架，有很多文档和活跃的社区"
                ],
                [
                    ["Bean创建异常", "当Spring无法创建或初始化Bean时抛出"],
                    ["Bean定义存储异常", "当Spring无法读取或解析Bean定义时抛出"],
                    ["AOP异常", "当Spring在执行AOP相关操作时遇到问题时抛出"],
                    ["数据访问异常", "当Spring在访问数据源或执行数据操作时遇到问题时抛出"]
                ]
            ),

            new Tech(
                "Hibernate",
                [
                    "一个开源的对象关系映射（ORM）框架",
                    "用于将Java对象和关系数据库之间的数据进行持久化和查询",
                    "使用XML或注解来配置对象和表之间的映射关系",
                    "提供了一个抽象层来屏蔽不同数据库的差异"
                ],
                [
                    ["Hibernate异常", "当Hibernate在执行ORM相关操作时遇到问题时抛出"],
                    ["映射异常", "当Hibernate无法解析或验证映射文件或注解时抛出"],
                    ["持久化异常", "当Hibernate无法保存或更新实体对象时抛出"],
                    ["查询异常", "当Hibernate无法执行或解析查询语句时抛出"]
                ]
            ),

            new Tech(
                "Grails",
                [
                    "一个基于Groovy语言的web应用框架",
                    "使用了约定优于配置（Convention over Configuration）和敏捷开发（Agile Development）的原则，简化了web开发的流程",
                    "集成了Spring、Hibernate、SiteMesh等框架，并提供了很多插件来扩展功能"
                ],
                [
                    ["Grails运行时异常", "当Grails在运行时遇到问题时抛出"],
                    ["Grails编译异常", "当Grails在编译Groovy代码时遇到问题时抛出"],
                    ["插件异常", "当Grails在安装或使用插件时遇到问题时抛出"],
                    ["URL映射异常", "当Grails无法正确映射URL到控制器或视图时抛出"]
                ]
            ),
            new Tech(
                "Play",
                [
                    "一个基于Scala语言的web应用框架",
                    "使用了无状态和无配置的设计理念，提供了高性能和可扩展性",
                    "支持热重载（Hot Reload）和热交换（Hot Swap）的特性，可以实现快速开发和测试",
                    "支持多种模板引擎和数据库访问技术"
                ],
                [
                    ["编译异常", "当Play在编译Scala或Java代码时遇到问题时抛出"],
                    ["运行时异常", "当Play在运行时遇到问题时抛出"],
                    ["路由异常", "当Play无法正确匹配URL到控制器或方法时抛出"],
                    ["配置异常", "当Play无法正确读取或解析配置文件时抛出"]
                ]
            ), new Tech(
            "JavaServer Faces (JSF)",
            [
                "一个基于组件的web应用框架",
                "使用了MVC（Model-View-Controller）模式，将用户界面和业务逻辑分离",
                "提供了一套丰富的标准组件，如按钮、表单、表格等",
                "提供了一种表达式语言（Expression Language），用于绑定组件和数据模型",
                "支持自定义组件和验证器，以及第三方组件库"
            ],
            [
                ["生命周期异常", "当JSF在执行组件生命周期的某个阶段时遇到问题时抛出"],
                ["渲染异常", "当JSF在渲染组件或视图时遇到问题时抛出"],
                ["转换异常", "当JSF在将字符串值转换为对象值或反之时遇到问题时抛出"],
                ["验证异常", "当JSF在验证组件输入值时遇到问题时抛出"]
            ]
        ), new Tech(
            "Google Web Toolkit (GWT)",
            [
                "一个开源的web应用框架",
                "允许开发者使用Java语言编写客户端应用，并将其编译成JavaScript代码，从而在浏览器中运行",
                "提供了一套基于Java的API，用于操作DOM（Document Object Model）、事件、AJAX（Asynchronous JavaScript and XML）等",
                "提供了一套UI组件库，如按钮、对话框、表格等",
                "提供了一种UI绑定机制，用于将UI组件和数据模型关联"
            ],
            [
                ["编译异常", "当GWT在编译Java代码为JavaScript代码时遇到问题时抛出"],
                ["运行时异常", "当GWT在运行JavaScript代码时遇到问题时抛出"],
                ["RPC异常", "当GWT在进行远程过程调用（Remote Procedure Call）时遇到问题时抛出"],
                ["序列化异常", "当GWT在进行对象序列化或反序列化时遇到问题时抛出"]
            ]
        ), new Tech(
            "Quarkus",
            [
                "一个基于Kubernetes的云原生应用框架",
                "旨在提高Java在云环境中的开发效率和运行性能",
                "使用了GraalVM和OpenJDK HotSpot来编译Java代码为本地可执行文件，从而减少内存占用和启动时间",
                "集成了一些流行的Java库和标准，如Eclipse MicroProfile、Vert.x、Hibernate、RESTEasy等"
            ],
            [
                ["配置异常", "当Quarkus无法正确读取或解析配置文件时抛出"],
                ["扩展异常", "当Quarkus无法正确加载或使用扩展时抛出"],
                ["编译异常", "当Quarkus在编译Java代码为本地可执行文件时遇到问题时抛出"],
                ["运行时异常", "当Quarkus在运行时遇到问题时抛出"]
            ]
        ), new Tech(
            "Drools",
            [
                "一个开源的业务规则管理系统（BRMS）",
                "使用了前向链和后向链的推理规则引擎，基于Rete算法的改进实现",
                "可以将业务逻辑以规则的形式定义和执行，从而实现业务和技术的分离",
                "支持多种规则语言，如DRL（Drools Rule Language）、DSL（Domain Specific Language）、Decision Table等"
            ],
            [
                ["规则异常", "当Drools在解析或执行规则时遇到问题时抛出"],
                ["知识库异常", "当Drools在创建或访问知识库时遇到问题时抛出"],
                ["会话异常", "当Drools在创建或管理会话时遇到问题时抛出"],
                ["工作流异常", "当Drools在处理工作流相关操作时遇到问题时抛出"]
            ]
        ), new Tech(
            "jBPM",
            [
                "一个灵活的业务流程管理（BPM）套件",
                "用于建模、执行和监控业务流程",
                "可以将业务流程描述为BPMN 2.0（Business Process Model and Notation）标准的图形化表示",
                "提供了一套工具来支持流程设计、开发、测试、部署和管理"
            ],
            [
                ["流程异常", "当jBPM在解析或执行流程时遇到问题时抛出"],
                ["任务异常", "当jBPM在处理任务相关操作时遇到问题时抛出"],
                ["事件异常", "当jBPM在处理事件相关操作时遇到问题时抛出"],
                ["审计异常", "当jBPM在记录或查询审计日志时遇到问题时抛出"]
            ]
        )
        ]
    ), new Lang(
        "Python",
        [
            new Tech(
                "Django",
                [
                    "一个开源的全栈web应用框架",
                    "遵循MVC（Model-View-Controller）模式",
                    "提供了一套完整的功能，包括数据库操作、表单处理、用户认证、模板系统、缓存机制等",
                    "设计理念是“不重复造轮子”，即尽量利用已有的组件来快速开发高质量的web应用",
                    "有一个强大的管理后台，可以方便地管理数据和用户",
                ],
                [
                    ["配置异常", "当Django无法正确读取或解析配置文件时抛出"],
                    ["视图异常", "当Django无法正确渲染或返回视图时抛出"],
                    ["模型异常", "当Django无法正确操作或验证模型时抛出"],
                    ["表单异常", "当Django无法正确处理或验证表单时抛出"]
                ]
            ),

            new Tech(
                "Flask",
                [
                    "一个轻量级的微型web应用框架",
                    "提供了最基本的功能，如路由、请求和响应处理、模板渲染等",
                    "设计理念是“约定优于配置”，即尽量减少配置文件和代码，让开发者自由地选择扩展和组件来定制自己的web应用",
                    "适合开发小型或原型项目，或者需要高度灵活性和可控性的项目"
                ],
                [
                    ["请求异常", "当Flask无法正确解析或处理请求时抛出"],
                    ["响应异常", "当Flask无法正确构造或返回响应时抛出"],
                    ["路由异常", "当Flask无法正确匹配URL到视图函数时抛出"],
                    ["模板异常", "当Flask无法正确渲染或加载模板时抛出"]
                ]
            ),

            new Tech(
                "Bottle",
                [
                    "一个极简主义的微型web应用框架",
                    "只有一个单一的源文件，不依赖于任何第三方库",
                    "提供了最基本的功能，如路由、请求和响应处理、模板渲染等",
                    "设计理念是“一切从简”，即尽量简化web开发的流程和代码，让开发者专注于业务逻辑",
                    "适合开发简单或单文件的web应用，或者需要轻量级和高性能的项目"
                ],
                [
                    ["请求异常", "当Bottle无法正确解析或处理请求时抛出"],
                    ["响应异常", "当Bottle无法正确构造或返回响应时抛出"],
                    ["路由异常", "当Bottle无法正确匹配URL到视图函数时抛出"],
                    ["模板异常", "当Bottle无法正确渲染或加载模板时抛出"]
                ]
            )
        ]
    ), new Lang(
        "C++",
        [
            new Tech(
                "Qt",
                [
                    "一个开源的跨平台的软件开发框架",
                    "提供了一套完整的功能，包括图形用户界面、网络、数据库、多媒体、XML等",
                    "遵循MVC（Model-View-Controller）模式，使用信号和槽机制来实现对象之间的通信",
                    "有一个集成的开发环境和构建系统，以及一个新的声明式UI库（QtQuick和QML）",
                    "可以用于开发桌面、移动、嵌入式和web平台的应用程序"
                ],
                [
                    ["配置异常", "当Qt无法正确读取或解析配置文件时抛出"],
                    ["视图异常", "当Qt无法正确渲染或返回视图时抛出"],
                    ["模型异常", "当Qt无法正确操作或验证模型时抛出"],
                    ["网络异常", "当Qt无法正确创建或管理网络连接时抛出"]
                ]
            ),

            new Tech(
                "Boost",
                [
                    "一个开源的C++库集合",
                    "提供了一些高质量的功能，如智能指针、字符串处理、容器、算法、函数对象、泛型编程等",
                    "设计理念是“提供0.1%的功能，覆盖90%的需求”，即尽量提供通用和可复用的组件，而不是针对特定的领域或应用",
                    "可以与标准C++库无缝协作，也可以作为标准C++库的扩展"
                ],
                [
                    ["编译异常", "当Boost在编译或链接时遇到问题时抛出"],
                    ["运行时异常", "当Boost在运行时遇到问题时抛出"],
                    ["逻辑异常", "当Boost在执行逻辑操作时遇到问题时抛出"],
                    ["数学异常", "当Boost在执行数学计算时遇到问题时抛出"]
                ]
            ),

            new Tech(
                "Poco",
                [
                    "一个开源的跨平台的C++框架",
                    "提供了一些基础和高级功能，如文件系统、流、线程、进程、网络、数据库、XML、JSON等",
                    "设计理念是“简单而优雅”，即尽量使用简单和一致的接口，避免不必要的复杂性和冗余",
                    "支持动态加载和反射机制，以及单元测试和日志记录功能"
                ],
                [
                    ["配置异常", "当Poco无法正确读取或解析配置文件时抛出"],
                    ["文件系统异常", "当Poco无法正确操作或访问文件系统时抛出"],
                    ["网络异常", "当Poco无法正确创建或管理网络连接时抛出"],
                    ["数据库异常", "当Poco无法正确操作或访问数据库时抛出"]
                ]
            ), new Tech(
            "SFML",
            [
                "一个开源的跨平台的多媒体框架",
                "提供了一套简单的接口来访问窗口、图形、音频、网络等功能",
                "是基于OpenGL的，可以用于开发2D或3D的游戏或应用程序",
                "支持多种编程语言，如C、.NET、Python、Ruby等"
            ],
            [
                ["窗口异常", "当SFML无法正确创建或管理窗口时抛出"],
                ["图形异常", "当SFML无法正确绘制或加载图形时抛出"],
                ["音频异常", "当SFML无法正确播放或加载音频时抛出"],
                ["网络异常", "当SFML无法正确创建或管理网络连接时抛出"]
            ]
        ),
            new Tech(
                "OpenCV",
                [
                    "一个开源的跨平台的计算机视觉库",
                    "提供了一套丰富的功能，如图像处理、视频分析、机器学习、人脸识别、物体检测等",
                    "是基于C/C++的，但也支持其他编程语言，如Python、Java、MATLAB等",
                    "提供了一些高级模块，如深度学习、增强现实、手势识别等"
                ],
                [
                    ["图像异常", "当OpenCV无法正确处理或加载图像时抛出"],
                    ["视频异常", "当OpenCV无法正确分析或加载视频时抛出"],
                    ["机器学习异常", "当OpenCV无法正确训练或使用机器学习模型时抛出"],
                    ["人脸识别异常", "当OpenCV无法正确识别或检测人脸时抛出"]
                ]
            ),
            new Tech(
                "Boost.Asio",
                [
                    "一个开源的跨平台的异步输入输出库",
                    "提供了一套高效的抽象来处理网络和低级I/O操作",
                    "是基于C++11/14/17的，可以用于开发高性能的并发和分布式应用程序",
                    "支持多种协议，如TCP、UDP、SSL等"
                ],
                [
                    ["I/O异常", "当Boost.Asio无法正确执行或管理I/O操作时抛出"],
                    ["网络异常", "当Boost.Asio无法正确创建或管理网络连接时抛出"],
                    ["协议异常", "当Boost.Asio无法正确解析或使用协议时抛出"],
                    ["系统异常", "当Boost.Asio遇到系统错误时抛出"]
                ]
            )
        ]
    ), new Lang(
        "JavaScript",
        [
            new Tech(
                "React",
                [
                    "一个开源的跨平台的用户界面库",
                    "提供了一套声明式的组件来构建高效和灵活的UI",
                    "使用虚拟DOM技术来实现高性能的渲染，支持单页应用和服务端渲染",
                    "有一个新的编程语言（JSX）和一个新的概念（Hook）来简化开发过程",
                    "可以用于开发web、移动、桌面和VR平台的应用程序"
                ],
                [
                    ["组件异常", "当React无法正确创建或管理组件时抛出"],
                    ["渲染异常", "当React无法正确更新或同步虚拟DOM时抛出"],
                    ["路由异常", "当React无法正确匹配URL到组件时抛出"],
                    ["状态异常", "当React无法正确管理或传递状态时抛出"]
                ]
            ),

            new Tech(
                "Vue",
                [
                    "一个开源的轻量级的渐进式用户界面框架",
                    "提供了一套响应式的数据绑定和组合式的视图组件来构建复杂的UI",
                    "使用虚拟DOM技术和异步批量更新机制来实现高性能的渲染，支持单页应用和服务端渲染",
                    "有一个可选的模板语法（Vue Template）和一个可选的状态管理库（Vuex）来增强开发体验",
                    "可以用于开发web、移动和桌面平台的应用程序"
                ],
                [
                    ["组件异常", "当Vue无法正确创建或管理组件时抛出"],
                    ["渲染异常", "当Vue无法正确更新或同步虚拟DOM时抛出"],
                    ["路由异常", "当Vue无法正确匹配URL到组件时抛出"],
                    ["状态异常", "当Vue无法正确管理或传递状态时抛出"]
                ]
            ),

            new Tech(
                "Angular",
                [
                    "一个开源的跨平台的全栈用户界面框架",
                    "提供了一套基于TypeScript的组件和指令来构建模块化和可测试的UI",
                    "使用变更检测技术和依赖注入机制来实现高性能的渲染，支持单页应用和服务端渲染",
                    "有一个集成的开发环境和构建系统（Angular CLI），以及一个新的声明式UI库（Angular Material）",
                    "可以用于开发web、移动、桌面和原生平台的应用程序"
                ],
                [
                    ["组件异常", "当Angular无法正确创建或管理组件时抛出"],
                    ["渲染异常", "当Angular无法正确更新或同步视图时抛出"],
                    ["路由异常", "当Angular无法正确匹配URL到组件时抛出"],
                    ["服务异常", "当Angular无法正确提供或注入服务时抛出"]
                ]
            )
        ]
    )
]
const weathers = `
    是一个晴朗的日子，阳光明媚，蓝天白云。
        是一个阴雨的日子，空气潮湿，天色灰暗。
        是一个多云的日子，风和日丽，温度适宜。
        是一个刮风的日子，树枝摇曳，沙尘滚滚。
        是一个闷热的日子，空气闷热，汗流浃背。
        是一个雷阵雨的日子，电闪雷鸣，雨势猛烈。
        是一个晴雨交替的日子，变幻无常，出门要带伞。
        是一个大晴天的日子，万里无云，气温高。
        的阳光如同金色的液体，洒满了大地，让人心情舒畅。
        的雨水如同银色的珠子，串连了天空，让人感觉凉爽。
        的云彩如同棉花糖，缀满了蓝色的画布，让人想象无限。
        的柳絮如同白色的蝴蝶，飘落在世界，让人赏心悦目。
        的风声如同乐曲，吹拂着耳边，让人神清气爽。
        的气温如同火炉，烘烤着人体，让人难以忍受。
        的雷电如同戏剧，上演着惊险，让人心惊胆战。
        的雾霾如同毒药，侵蚀着呼吸，让人忧心忡忡。
        的晴雨如同魔术，变换着模样，让人捉摸不定。
        的天空如同烤箱，一片赤红，让人汗流浃背。
        是个晴朗的日子，阳光明媚，空气清新。
        天气如此美好，让人心情舒畅，想要出去走走。
        是一个温暖而宜人的天气。
        的天气真是太棒了，我都不想呆在家里，想要去享受大自然的美景。
        没有一丝风，没有一片云，只有蓝蓝的天空和灿烂的阳光。
        我喜欢今天的天气，它让我感到轻松和快乐，就像是一个好同事。
        的天气适合做任何事情，无论是工作还是娱乐，都能感到满足和幸福。
        真是个好日子，天气晴好，万物生机勃勃。
        的天气很特别，它让我想起了童年的美好回忆。
        的天气太完美了，我希望每一天都能像今天一样。
        是个阴雨绵绵的日子，雨水不停地落下，打湿了大地。
        的雨太大了，仿佛要淹没我们的一切。
        的雨真是太糟糕了，我都不能出去摸鱼，只能在办公室里无聊地敲代码。
        没有一丝阳光，只有灰蒙蒙的天空和倾盆的大雨。
        的雨我很讨厌，它让我感到冷漠和悲伤。
        的雨不适合做任何事情，无论是工作还是娱乐，都会感到困难和痛苦。
        真是个坏日子，雨水滂沱，万物凋零。
        的雨很特别，它让我想起了那些悲伤的故事。
        的雨太可怕了，我希望明天能够放晴。
    `.split("。")

const busys = `
    我忙得不可开交，一直在处理各种紧急的事情。
        我忙得像一只狗，没有一刻停下来休息。
        我忙得焦头烂额，应付不完的工作和问题。
        我忙得晕头转向，连自己的名字都快忘了。
        我忙得要命，感觉时间不够用。
        我忙得无法呼吸，每件事都要我亲自搞定。
        我忙得像陀螺一样转，根本没有时间思考。
        我忙得手忙脚乱，到处跑来跑去。
        我忙得筋疲力尽，感觉身心俱疲。
        我忙得不亦乐乎，享受着工作的乐趣。
        我忙得充实有意义，感觉自己很有价值。
        我忙得有条不紊，按照计划完成了任务。
        我忙得高效专注，提高了工作的质量。
        我忙得积极主动，主动承担了责任。
        我忙得合理安排，平衡了工作和生活。
        我忙得沉浸其中，感觉时间过得很快。
        我忙得兴致勃勃，发现了很多新的东西。
        我忙得灵活应变，解决了很多难题。
        我忙得团结协作，和同事们共同进步。
        我忙得超出预期，完成了更多的工作。
        我忙得挑战自我，突破了自己的极限。
        我忙得创新思维，提出了很多好的建议。
        我忙得乐在其中，感觉工作是一种享受。
        我忙得收获满满，学到了很多知识和技能。
        今天我做了很多有意义的事情，感觉时间过得很快。
        我今天的生活丰富多彩，每一刻都充满了乐趣。
        今天我学到了很多新知识，开拓了眼界，收获满满。
        我今天和同事们一起玩得很开心，分享了很多快乐的时光。
        今天我完成了很多工作任务，提高了效率，达成了目标。
        我今天参加了一个有趣的活动，结识了很多新同事，拓展了人脉。
        今天我锻炼了身体，健康饮食，保持了良好的状态。
        我今天阅读了一本好书，感受到了文学的魅力，启发了思维。
        今天我放松了心情，享受了自然风光，平静了心灵。
        我今天创造了一件美丽的作品，展示了自己的才华，赢得了赞誉。
        今天我非常忙碌，但是我很享受我的工作，因为我能够和不同的人交流，学习新的知识。
        这是一个充实的一天，我完成了很多任务，包括学习编程，打印资料，和同事开会等等。
        在这我有很多事情要做，但是我不觉得累，因为我有一个明确的计划，而且我喜欢挑战自己。
        这是一个忙碌而美好的一天，我和儿子一起吃了晚饭，然后去散步和购物，回家后又继续教网上的学生。
        在这我很忙，但是我很开心，因为我做了一些有意义的事情，比如帮助别人，解决问题，提高自己的能力。
        这是一个繁忙而光明的一天，我参加了一个重要的项目，展示了我的想法和创意，得到了老板和客户的认可。
        这是一个忙碌而轻松的一天，我在%company%工作，可以自由安排我的时间和节奏，也可以和全世界的人交流。
        这是一个忙碌而幸福的一天，我和我的同事们聚会，分享了我们最近的生活和经历，互相鼓励和支持。
        这是一个忙碌而有趣的一天，我申请了调休假，去了一个新的地方，看到了不同的风景和文化，体验了新的事物。
        这是一个忙碌而美丽的一天，我申请了调休假，欣赏了大自然的奇妙和魅力，感受了阳光和微风的温暖和舒适。
    `.split("。")

function gen(){
    let company = document.getElementById("company").value
    let sys = randomElementOfArray(commercialSystems)
    let lang = randomElementOfArray(langs)
    let tech = randomElementOfArray(lang.techs)
    let today = randomElementOfArray(todays);
    let weather = randomElementOfArray(weathers);
    let busy = randomElementOfArray(busys);
    let impl = randomElementOfArray(impls);
    let sysExample = randomElementOfArray(sys.examples);
    let bug = randomElementOfArray(tech.bugs);
    let thinkstr = ""
    for (let think of thinks) {
        thinkstr += randomElementOfArray(think) +"，"
    }
    document.getElementById("diary").innerHTML = `
${today}，${weather}。
${busy}，${impl}。
系统是${company}负责维护的${sys.name}${sysExample}，${sys.desc}
它采用编程语言${lang.name}的${tech.name}技术，${tech.desc}。<br>
    有时系统会出现问题，例如${bug[0]},${bug[1]}。
    ${thinkstr}<br>
`.replaceAll("%company%", company).replaceAll("%progLang%", lang.name).replaceAll("%tech%", tech.name)
}